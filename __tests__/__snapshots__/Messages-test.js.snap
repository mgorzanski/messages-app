// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReactNativeTesting renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "height": 1334,
      },
      Object {
        "backgroundColor": "#494949",
      },
    ]
  }
  virtual={undefined}
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <RCTRefreshControl />
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={null}
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "backgroundColor": "#414141",
              "display": "flex",
              "flexDirection": "row",
              "height": 24,
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#fff",
                "fontFamily": "BebasNeue",
                "marginLeft": 7,
                "marginTop": 4,
              }
            }
          >
            TEST
          </Text>
          <Image
            placeholderColor="#414141"
            source={
              Object {
                "process": [Function],
              }
            }
            style={
              Object {
                "marginRight": 7,
                "marginTop": 3,
              }
            }
          />
        </View>
      </View>
      <View
        closeOnRowBeginSwipe={false}
        closeOnRowPress={true}
        closeOnScroll={true}
        directionalDistanceChangeThreshold={2}
        disableLeftSwipe={false}
        disableRightSwipe={false}
        leftOpenValue={0}
        previewFirstRow={false}
        recalculateHiddenLayout={false}
        rightOpenValue={0}
        style={Object {}}
        swipeToOpenPercent={50}
        virtual={undefined}
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "flex": 1,
        "height": 1334,
      },
      Object {
        "backgroundColor": "#494949",
      },
    ]
  }
  virtual={undefined}
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={
      Object {
        "backgroundColor": "transparent",
        "flex": 1,
      }
    }
    viewIsInsideTabBar={false}
    virtual={undefined}
  >
    <RCTRefreshControl />
    <View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={null}
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <View
          style={
            Object {
              "backgroundColor": "#414141",
              "display": "flex",
              "flexDirection": "row",
              "height": 24,
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "color": "#fff",
                "fontFamily": "BebasNeue",
                "marginLeft": 7,
                "marginTop": 4,
              }
            }
          >
            TEST
          </Text>
          <Image
            placeholderColor="#414141"
            source={
              Object {
                "process": [Function],
              }
            }
            style={
              Object {
                "marginRight": 7,
                "marginTop": 3,
              }
            }
          />
        </View>
      </View>
      <View
        closeOnRowBeginSwipe={false}
        closeOnRowPress={true}
        closeOnScroll={true}
        directionalDistanceChangeThreshold={2}
        disableLeftSwipe={false}
        disableRightSwipe={false}
        leftOpenValue={0}
        previewFirstRow={false}
        recalculateHiddenLayout={false}
        rightOpenValue={0}
        style={Object {}}
        swipeToOpenPercent={50}
        virtual={undefined}
      />
    </View>
  </RCTScrollView>
</View>
`;
